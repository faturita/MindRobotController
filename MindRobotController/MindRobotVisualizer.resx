<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vM7s3M4O7vzO8BzP8jzP9KwqAQEAOw==
</value>
  </data>
</root>